syntax = "proto3";

package protobuf_msgs;

option go_package = "ase/protobuf_msgs";

//
// This file defines the messages used by the ase system to communicate
// service endpoints, statusses, endpoints, tuning parameters, etc.
//

// Used to identify a service within the system
message ServiceIdentifier {
    string name = 1;
    int32 pid = 2;
}

// An endpoint that is made available by a service
message ServiceEndpoint {
    string name = 1; // the identifier to select this endpoint
    string address = 2; // the zmq address to connect to
}



//
// Service discovery messages send back and forth between the system manager and services
//

// A description of a service, sent by a service to register itself or broadcasted by the system manager
message Service {
    ServiceIdentifier identifier = 1;
    repeated ServiceEndpoint endpoints = 2;
}

// When a service requests information about other services, it sends an InformationRequest message
message ServiceInformationRequest {
    ServiceIdentifier requested = 1;
}

// When the system manager sends information about a service, it sends an Information message
// Also used to broadcast registrations to all services
message ServiceStatus {
    enum Status {
        UNKNOWN = 0;
        RUNNING = 1;
        STOPPED = 2;
        NOT_REGISTERED = 3;
    }

    Service service = 1;
    Status status = 2;
}

// The system manager can order services to stop/restart by sending a service order
message ServiceOrder {
    enum OrderType {
        STOP = 0; // will attempt a graceful shutdown
        KILL = 1; // will kill the service immediately
        FORCE_RESTART = 2; // will kill the service immediately and restart
    }

    // The service this order is for
    ServiceIdentifier service = 1;
    OrderType order = 2;
}